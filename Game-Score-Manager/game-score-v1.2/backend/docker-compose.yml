
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nest-api
    ports:
      - '${PORT}:${PORT}'
    depends_on:
      - mongodb
      - postgres
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - MONGO_URI=${MONGO_URI}
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - .:/usr/src/app         
      - /usr/src/app/node_modules 
    networks:
      - backend-network
    restart: unless-stopped

  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGODB_DATABASE}
    ports:
      - '27018:27017'
    volumes:
      - mongodb_data:/data/db
    networks:
      - backend-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '5433:5432'
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - backend-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  mongodb_data:
  postgres_data:

networks:
  backend-network:
    driver: bridge
